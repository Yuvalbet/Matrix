Email: yuvali532@gmail.com

# README - SquareMat Project

## Overview

This project is focused on implementing a class called `SquareMat` in C++ to handle operations on square matrices of a given size. The goal of the assignment is to support various matrix operations including addition, subtraction, multiplication, determinant calculation, transposition, and more. Additionally, the project includes unit tests using **Doctest** to ensure the correct functionality of the `SquareMat` class and its operations.

## Operators in the `SquareMat` Class

- **Addition** (`+`): Adds two matrices of the same size.
- **Subtraction** (`-`): Subtracts two matrices of the same size.
- **Matrix Multiplication** (`*`): Multiplies two matrices.
- **Element-wise Multiplication** (`%`): Multiplies two matrices element by element (same dimensions).
- **Scalar Multiplication** (`*`): Multiplies each element of the matrix by a scalar.
- **Division** (`/`): Divides each element in the matrix by a scalar (non-zero scalar only).
- **Modulo** (`%` with scalar): Applies modulo operation to each element in the matrix with a scalar.
- **Exponentiation** (`^`): Raises the matrix to a non-negative integer power (by repeated multiplication).
- **Transposition** (`~`): Returns the transposed version of the matrix.
- **Comparison Operators** (`==`, `!=`, `<`, `>`): Compares matrices based on the **sum of all elements** in the matrix.
- **Compound Assignment Operators**:
  - `+=`, `-=`: Adds or subtracts another matrix of the same size to/from the current one.
  - `*=`, `/=`, `%=`: Multiplies/divides/applies modulo on each element of the matrix by a scalar, modifying the matrix in place.

## Files in the Project

- **main.cpp**: Contains the main code of the program. This file creates matrices and performs various operations on them.
- **SquareMat.hpp**: Header file that defines the `SquareMat` class along with the operators and functions.
- **SquareMat.cpp**: Implementation file where the `SquareMat` class and its operations are defined.
- **Tests.cpp**: Contains unit tests using **Doctest**, covering all the operators and functions of the `SquareMat` class.
- **Makefile**: Contains compilation and testing commands for building and running the project.
- **doctest.h**: Header-only library used for writing unit tests.

## Running the Program

### Compiler Requirement

Before running the program, ensure that `clang++` is installed on your system.  
If it's not installed, install it using your system's package manager.

### Makefile Commands

The provided `Makefile` includes convenient commands for building and testing the project:

- **`make main`**  
  Compiles `main.cpp` and `SquareMat.cpp` into an executable called `Main`.
  ```bash
  make main
  ```

- **`make valgrind`**  
  Runs the program using `valgrind` to check for memory leaks.
  ```bash
  make valgrind
  ```

- **`make test`**  
  Compiles and runs the unit tests with Doctest.
  ```bash
  make test
  ```

- **`make clean`**  
  Deletes all compiled objects and executables to clean the workspace.
  ```bash
  make clean
  ```

## Summary

This project implements a `SquareMat` class in C++ for handling square matrices with full operator support, including arithmetic, comparison, exponentiation, transposition, and more. Unit tests are written using **Doctest**, and a `Makefile` simplifies compilation and memory checking with `valgrind`. The program is modular and maintainable, with clear separation between interface, implementation, and tests.